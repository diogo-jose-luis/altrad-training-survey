
VERCEL is the company that created nextjs

npx create-next-app@13.4
npx create-next-app@latest

//The above command is just to specify the version, but you run only npx create-next-app if you want the last version

npx create-next-app@13.4 . //add dot in front of the command if you want to install it in the current directory

npm run dev //to run the app

#############################################
PROJECT STRUTURE
#############################################

in root the "app" directory in the container for routing system, in nextjs route is based in file system.


#############################################
ROUTING AND NAVIGATION
#############################################

When you create a new folder in "app" directory has it is going to be automacally a name of a route for the convetion nextjs says that the file inside that folder must be named "page.tsx"

The name of component in file "page.tsx" doesnt really have to be the same as the name of file, you can put something more meaningfull to what the component represents.

rafce // is the shortcut to create a quick component

#############################################
CLIENT VS SERVER COMPONENT
#############################################

"components" diretory inside "app" is not publically accessible, that "components" diretory is a server-side diretory, so browser events on the react components inside there are not going to work, unless you use :
'use client' //above the section where you place the imports in a component

#############################################
FETCHING DATA
#############################################

can create interface to represent models

interface Departamento{
    id:number;
    designacao:string;
    descricao:string;
}

const res = await fetch("http://127.0.0.1:8000/departamentos");
const departamentos : Departamento[] = await res.json();

DonÂ´t need useEffect() or useState()

#############################################
CACHING
#############################################

We can get data from :
- Memory
- File System
- Network

gettting data from Memory is faster than File System and from File System is faster than from Network.

Nextjs get data from File System ( cache ), so if you have a database wich can be frequentily updated with new data, you have to use no-store in cache in your fetch request like this below :

const res = await fetch("http://127.0.0.1:8000/departamentos", {cache : 'no-store'});

And the other alternative is to create  a period of time that data should be updated in that request like this below :
const res = await fetch("http://127.0.0.1:8000/departamentos", {next : {revalidate : 10}});


#############################################
STATIC AND DYNAMIC RENDERING
#############################################













