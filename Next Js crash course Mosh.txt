
VERCEL is the company that created nextjs

npx create-next-app@13.4
npx create-next-app@latest

npx next --version

//The above command is just to specify the version, but you run only npx create-next-app if you want the last version

npx create-next-app@13.4 . //add dot in front of the command if you want to install it in the current directory

npm run dev //to run the app

#############################################
PROJECT STRUTURE
#############################################

in root the "app" directory in the container for routing system, in nextjs route is based in file system.


#############################################
ROUTING AND NAVIGATION
#############################################

When you create a new folder in "app" directory has it is going to be automacally a name of a route for the convetion nextjs says that the file inside that folder must be named "page.tsx"

The name of component in file "page.tsx" doesnt really have to be the same as the name of file, you can put something more meaningfull to what the component represents.

rafce // is the shortcut to create a quick component

#############################################
CLIENT VS SERVER COMPONENT
#############################################

"components" diretory inside "app" is not publically accessible, that "components" diretory is a server-side diretory, so browser events on the react components inside there are not going to work, unless you use :
'use client' //above the section where you place the imports in a component

#############################################
FETCHING DATA
#############################################

can create interface to represent models

interface Departamento{
    id:number;
    designacao:string;
    descricao:string;
}

const res = await fetch("http://127.0.0.1:8000/departamentos");
const departamentos : Departamento[] = await res.json();

Don´t need useEffect() or useState()

#############################################
CACHING
#############################################

We can get data from :
- Memory
- File System
- Network

gettting data from Memory is faster than File System and from File System is faster than from Network.

Nextjs get data from File System ( cache ), so if you have a database wich can be frequentily updated with new data, you have to use no-store in cache in your fetch request like this below :

const res = await fetch("http://127.0.0.1:8000/departamentos", {cache : 'no-store'});

And the other alternative is to create  a period of time that data should be updated in that request like this below :
const res = await fetch("http://127.0.0.1:8000/departamentos", {next : {revalidate : 10}});


#############################################
STATIC AND DYNAMIC RENDERING
#############################################

npm run build //build from production to static
npm start //runs builded project generated from npm run build

You can try build using :
const res = await fetch("http://127.0.0.1:8000/departamentos", {next : {revalidate : 10}});
to see if for instance a date time stamp is going to change whenever you refresh the page

then you can try build using :
const res = await fetch("http://127.0.0.1:8000/departamentos", {cache : 'no-store'});
And you´ll see that date time stamp will change whenever you refresh the page

Thats the diffrence between static and dynamic rendering the secret is using cahe : 'no-store' for dynamic rendering


#############################################
STYLING NEXTJS APPLICATION
#############################################

- Global style
- CSS module
- Tailwind CSS
- DaisyUI ( the most popular component librarie for tailwind css)

Reserve the globals.css file for style that are trully global is not a good pratice put there style related to specific components.

Css files extension css must after .module, example name of file produtoEstilo.module.css instead of produtoEstilo.css

For css files names dont use dash instead use the came or case method to define a combined name it is not a good pratice actually it is does not work, so instead of using .card-container use cardContainer

https://daisyui.com/docs/install/
npm i -D daisyui@latest

And in tailwind.config.ts file add this :

module.exports = {
  //...
  plugins: [
    require('daisyui'),
  ],
}

if you want to use themes in DaisyUI you add this code below plugins in tailwind.config.ts :

daisyui: {
    themes: ["light", "dark", "cupcake"],
  },
  
  
like this :

module.exports = {
  //...
  plugins: [
    require('daisyui'),
  ],
  daisyui: {
    themes: ["light", "dark", "cupcake","winter"],
  },
}

or just the theme you want like this :

module.exports = {
  //...
  plugins: [
    require('daisyui'),
  ],
  daisyui: {
    themes: ["winter"],
  },
}

and then add this property to html tag :

<html data-theme="winter"></html> 

npm i fast-sort

npm i zod ( request validation librarie )

npm i prisma ( ORM its like laravel arstisan )

npx prisma ( help commands instrution for prisma usage )

npx prisma init

npx prisma format

npx prisma migrate dev | for non relational DB use npx prisma push

npm i next-cloudinary

next-auth.js.org

npm install next-auth

openssl rand -base64 32 // ssl tool to generate a random sequence of bytes

npm i @next-auth/prisma-adapter

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  followers    Int      @default(0)
  isActive     Boolean  @default(true)
  registeredAt DateTime @default(now())
}

model Product {
  id    Int    @id @default(autoincrement())
  name  String
  price Float
}


npm i bcrypt
npm i -D @types/bcrypt

npm install react-hook-form zod @hookform/resolvers


react.email

npm i react-email @react-email/components

npm run preview-email 

npm i lodash

npm i -D @types/lodash

npm i -D encoding // important command for when uploading project to versel

npm install --save react-simplemde-editor easymde

npm install @radix-ui/themes

npm i react-hook-form@7.46.1

npm install react-hot-toast

npm install react-toastify

npm i @hookform/resolvers@3.3.1

npm i delay

npm i react-loading-skeleton@3.3.1

npm i react-markdown@8.0.1
import ReactMarkdown from 'react-markdown';

<Card className="prose">
  <ReactMarkDown>Text here...</ReactMarkDown>
</Card>

npm install -D @tailwindcss/typography

then in tailwind configuration file add this :

module.exports = {
  theme : {
    //...
  },
  plugins : [
    require('@tailwindcss/typography'),
    //...
  ]
}

npm i @radix-ui/react-icons

import {Pencil2Icon} from '@radix-ui/react-icons'

npm install @radix-ui/react-alert-dialog

TansTack Query
npm i @tanstack/react-query@4.35.3 

React toast
npm i react-hot-toast@2.4.1

sentry.io

